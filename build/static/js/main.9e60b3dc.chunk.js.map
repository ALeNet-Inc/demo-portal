{"version":3,"sources":["components/Button.js","components/Navbar.js","components/HeroSection.js","components/CardItem.js","components/Cards.js","components/Footer.js","pages/Home.js","pages/Services.js","pages/Products.js","functions/validateinfoSignUp.js","functions/ClientixAPI.js","functions/useForm.js","components/SignUp.js","components/FormSuccess.js","components/SignUpForm.js","pages/SignUp.js","functions/validateInfoLogin.js","components/FullPageLoader.js","functions/useFullPageLoader.js","components/Login.js","components/LoginForm.js","pages/Login.js","components/Cards2.js","components/Sidebar.js","pages/Account.js","functions/DataProcessingUtil.js","pages/MyTrusts.js","pages/MyTransactions.js","components/Dropdown.js","components/TextArea.js","components/Popup.js","pages/ServiceRequests.js","App.js","index.js"],"names":["STYLES","SIZES","Button","link","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","className","languages","code","name","country_code","GlobeIcon","width","height","xmlns","fill","viewBox","d","withRouter","props","location","currentLanguageCode","cookies","get","t","useTranslation","useState","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","document","title","addEventListener","pathname","match","Toggle","variant","id","Menu","map","Item","i18next","changeLanguage","disabled","style","opacity","HeroSection","src","alt","CardItem","path","data-category","label","text","Cards","Footer","placeholder","target","aria-label","Home","Services","Products","validateInfo","values","errors","username","trim","email","test","password","length","password2","ClientixAPI","this","sessionToken","Cookies","language","headers","Headers","append","requestOptions","mode","redirect","method","post","delete","showLoader","a","fetch","then","response","result","token","JSON","parse","session_token","Token","set","catch","error","console","log","json","account","stringify","accountInfo","sessionStorage","setItem","session_data","FIRSTNAME","LASTNAME","EMAIL","PHONE","myTrustsJson","hideLoader","myTransactionsJson","subject","info","serviceOptions","setTimeout","key","filter","option","value","urlPrep","getItem","servRequestOptions","login","getAccountInfo","getUserTrusts","getUserTransactions","useForm","callback1","validate","setValues","setErrors","isSubmitting","setIsSubmitting","api","ClientixApi","Object","keys","remove","clear","localStorage","handleChange","e","handleSubmit","preventDefault","SignUp","submitForm","onSubmit","noValidate","onChange","href","FormSuccess","SignUpForm","isSubmitted","setIsSubmitted","validateInfoLogin","FullPageLoader","useFullPageLoader","loading","setLoading","Login","loader","LoginForm","getUserData","Cards2","SideBarData","icon","cName","sidebar","setSidebar","toggle","item","index","Account","acc_hold","DataProcessingUtil","myTrusts","trust","objects","elem","obj","date","Date","contents","year","Intl","DateTimeFormat","format","month","day","dateString","removeUglyChars","toTitleCase","myTransactions","transaction","status","ammount","contract","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","MyTrusts","populateTable","MyTransactions","mytransactions","populateTransactions","Dropdown","event","setState","state","setOptions","options","React","Component","TextArea","rows","cols","Popup","trigger","setTrigger","ServiceRequests","serviceOption","setServiceOption","setInfo","buttonPopup","setButtonPopup","serviceRequestOptions","information","submitServiceRequest","App","exact","component","i18n","use","initReactI18next","LanguageDetector","HttpApi","init","supportedLngs","fallbackLng","detection","order","caches","backend","loadPath","loadingMarkup","ReactDOM","render","fallback","getElementById"],"mappings":"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","file":"static/js/main.9e60b3dc.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/Button.css';\nimport { Link } from 'react-router-dom';\n\n//Different styling options for custom button\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n//Different sizing options for custom button\nconst SIZES = ['btn--medium', 'btn--large'];\n\n/* A custom button */\n\nexport const Button = ({\n  link,\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <Link to={link} className='btn-mobile'>\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n    </Link>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Button } from './Button';\nimport { Link } from 'react-router-dom';\nimport './styles/Navbar.css';\nimport { Dropdown } from 'react-bootstrap';\nimport i18next from 'i18next'\nimport { useTranslation } from \"react-i18next\";\nimport cookies from 'js-cookie';\nimport { withRouter } from 'react-router';\nimport * as FaIcons from 'react-icons/fa'\nimport * as AiIcons from 'react-icons/ai'\n\n\n/* Current i8next language options available in the dropdown*/\nconst languages = [\n  {\n    code: 'en',\n    name: 'English',\n    country_code: 'gb'\n  },\n  {\n    code: 'es',\n    name: 'Español',\n    country_code: 'es'\n  }\n]\n\n/* Used for drop down menu for language selection */\nconst GlobeIcon = ({ width = 24, height = 24 }) => (<svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} fill=\"currentColor\" className=\"bi bi-globe\" viewBox=\"0 0 16 16\">\n  <path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z\" />\n</svg>)\n\n/* A Custom Navbar component */\n\nfunction Navbar(props) {\n  const { location } = props\n  const currentLanguageCode = cookies.get('i18next') || 'en'; //the current language selected\n\n  const { t } = useTranslation(); //react-i18-next\n\n  const [click, setClick] = useState(false); //mobile menu options\n  const [button, setButton] = useState(true); //display for sign up button on navbar\n\n  const handleClick = () => setClick(!click); //handles mobile menu clicks\n  const closeMobileMenu = () => setClick(false);\n\n  //Show the button only when window's inner width is <= 960 px\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  //SHow the respectice app title according to language\n  useEffect(() => {\n    document.title = t('app_title')\n    showButton();\n  }, [t]);\n\n  //resizing for the window will show or hide button depending on width\n  window.addEventListener('resize', showButton);\n\n  if (location.pathname.match('/account')\n    || location.pathname.match('/my-trusts')\n    || location.pathname.match('/service-request')\n    || location.pathname.match('/my-transactions')) {\n    return null;\n  }\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            {t('banking_portal')}\n            <AiIcons.AiFillBank className='bank' />\n          </Link>\n          <div className='menu-icon' onClick={handleClick}>\n            {click ? (<FaIcons.FaTimes className='fas fa-times' />) : (<FaIcons.FaBars className='fas fa-bars' />)}\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            <li className='nav-item'>\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                {t('home')}\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/services'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                {t('services')}\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/products'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                {t('products')}\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/sign-up'\n                className='nav-links-mobile'\n                onClick={closeMobileMenu}\n              >\n                {t('sign_up')}\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/login'\n                className='nav-links-mobile'\n                onClick={closeMobileMenu}\n              >\n                {t('login')}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Dropdown className=\"dropdown\">\n                <Dropdown.Toggle className=\"dropdown-toggle\" variant=\"success\" id=\"dropdown-basic\">\n                  <GlobeIcon className=\"globe\" /><FaIcons.FaChevronDown id='chevron-down' />\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu\">\n                  <li><span className=\"dropdow-item-text\">{t('language')}</span></li>\n                  {languages.map(({ code, name, country_code }) => (\n                    <li key={country_code} className=\"dropdown-list-item\">\n                      <Dropdown.Item className=\"dropdown-item\"\n                        onClick={() => i18next.changeLanguage(code)}\n                        disabled={code === currentLanguageCode}>\n                        <span className={`flag-icon flag-icon-${country_code} mx-2`} style={{ opacity: code === currentLanguageCode ? 0.3 : 1 }}></span> {/* Deactivate button when the current language is active */}\n                        {name}\n                      </Dropdown.Item>\n                    </li>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </li>\n          </ul>\n          {button && <Button link='/login' buttonStyle='btn--outline'>{t('login')}</Button>}\n          {button && <Button link='/sign-up' buttonStyle='btn--outline'>{t('sign_up')}</Button>}\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default withRouter(Navbar);\n","import React from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport {Button} from './Button';\nimport './styles/HeroSection.css';\nimport '../App.css';\nimport * as FaIcons from 'react-icons/fa'\n\n/* Custom Home Page Welcome Section Component Displaying a video, buttons for sign up etc.. */\n\nfunction HeroSection() {\n    const {t} = useTranslation();\n\n    return (\n        <div className='hero-container'>\n            <img src='images/savings.jpg' alt='city' className='background' />\n            <h1> {t('achieve_freedom_msg')} </h1>\n            <p> {t('waiting_for_msg')} </p>\n            <div className='hero-btns'>\n                <Button className='btns' buttonStyle='btn--outline' buttonSize='btn--large' to='/signup'>\n                {t('create_account_msg')}\n                </Button>\n                <Button className='btns' buttonStyle='btn--primary' buttonSize='btn--large' to='/login'>\n                {t('get_started_msg')} <FaIcons.FaPlayCircle className='fa-play-circle'/>\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroSection\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * Set up for {@link Cards} components  \n * @param {*} props path, text, img src, label\n * @returns the HTML setup for a card Component.\n */\nfunction CardItem(props) {\n    return (\n        <>\n            <li className='cards__item'>\n                <Link className='cards__item__link' to={props.path}>\n                    <figure className='cards__item__pic-wrap' data-category={props.label}>\n                        <img src={props.src} alt=\"Banking\" \n                        className='cards__item__img'/>\n                    </figure>\n                    <div className=\"cards__item__info\">\n                        <h5 className=\"cards__item__text\">{props.text}</h5>\n                    </div>\n                </Link>\n            </li>\n        </>\n    )\n}\n\nexport default CardItem\n","import React from 'react';\nimport CardItem from './CardItem';\nimport './styles/Cards.css';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Custom {@link CardItem} Component showing an image, text, a label.\n * @returns formatted {@link CardItem} Components\n */\nfunction Cards() {\n    const {t} =useTranslation(); //react-i18-next\n\n    return (\n        <div className='cards'>\n            <h1 >{t('browse_options')}</h1>\n            <div className=\"cards__container\">\n                <div className=\"cards__wrapper\">\n                    <ul className=\"cards__items\">\n                        <CardItem \n                            src='images/credit.jpg'\n                            text={t('credit_options')}\n                            label={t('rewards')}\n                            path='/services'\n                        />\n                        <CardItem \n                            src='images/loans.jpg'\n                            text={t('loan_today')}\n                            label={t('low_interest')}\n                            path='/services'\n                        />\n                    </ul>\n                    <ul className=\"cards__items\">\n                        <CardItem \n                            src='images/debit.jpg'\n                            text={t('awesome_debit')}\n                            label={t('service')}\n                            path='/services'\n                        />\n                        <CardItem \n                            src='images/money.jpg'\n                            text={t('saving_accounts')}\n                            label={t('high_return_interest')}\n                            path='/services'\n                        />\n                        <CardItem \n                            src='images/customerService.jpg'\n                            text={t('account_service')}\n                            label={t('example_email')}\n                            path='/services'\n                        />\n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {Button} from './Button';\nimport './styles/Footer.css';\nimport { useTranslation } from 'react-i18next';\nimport * as FaIcons from 'react-icons/fa'\n\n/* Custom Footer Component */\n\nfunction Footer() {\n    const {t} = useTranslation();\n\n    return (\n        <div className='footer-container'>\n            <section className='footer-subscription'>\n                <p className='footer-subscription-heading'>\n                    {t('join_newsletter')}\n                </p>\n                <p className='footer-subscription-text'>\n                    {t('unsubscribe_prompt')}\n                </p>\n                <div className='input-areas'>\n                    <form>\n                        <input type='email' name='email' placeholder={t('email_placeholder')} className='footer-input'/>\n                        <Button buttonSize='btn-medium' buttonStyle='btn--primary'>{t('subscribe')}</Button>\n                    </form>\n                </div>\n            </section>\n            <div className='footer-links'>\n                <div className='footer-link-wrapper'>\n                    <div className='footer-link-items'>\n                        <h2>{t('about_us')}</h2>\n                        <Link to='/services'>{t('our_philosophy')}</Link>\n                        <Link to='/services'>{t('testimonials')} </Link>\n                        <Link to='/services'>{t('careers')} </Link>\n                        <Link to='/services'>{t('investors')} </Link>\n                        <Link to='/services'>{t('terms_of_service')}</Link>\n                    </div>\n                    <div className='footer-link-items'>\n                        <h2>{t('social_media')}</h2>\n                        <Link to='/services'>Instagram </Link>\n                        <Link to='/services'>Facebook </Link>\n                        <Link to='/services'>Twitter </Link>\n                        <Link to='/services'>Youtube </Link>\n                    </div>     \n                </div>\n                <div className='footer-link-wrapper'>\n                    <div className='footer-link-items'>\n                        <h2>{t('contact_us')}</h2>\n                        <Link to='/services'>{t('contact')} </Link>\n                        <Link to='/services'>{t('support')} </Link>\n                        <Link to='/services'>{t('accounts')} </Link>\n                        <Link to='/services'>{t('service')} </Link>\n                        <Link to='/services'>{t('sponsorships')} </Link>\n                    </div>\n                    <div className='footer-link-items'>\n                        <h2>{t('rewards')}</h2>\n                        <Link to='/services'>{t('contact')} </Link>\n                        <Link to='/services'>{t('financial_freedom')}</Link>\n                        <Link to='/services'>{t('projects')} </Link>\n                        <Link to='/services'>{t('loans')} </Link>\n                        <Link to='/services'>{t('credit')} </Link>\n                    </div>     \n                </div>\n            </div>\n            <section className='social-media'>\n                <div className='social-media-wrap'>\n                    <div className='footer-logo'>\n                        <Link className='social-logo'>\n                            <img src='/images/clientixlogo.jpg' alt='Clientix Logo' className='social-logo-img'></img>\n                        </Link>\n                    </div>\n                    <small className='website-rights'> Powered by Clientix ©2003-2021 ALeNet, Inc.</small>\n                    <div className='social-icons'>\n                        <Link className='social-icon-link facebook'\n                            to='/'\n                            target='_blank'\n                            aria-label='Facebook'\n                        >\n                            <FaIcons.FaFacebook />\n                        </Link>\n                        <Link className='social-icon-link instagram'\n                            to='/'\n                            target='_blank'\n                            aria-label='Instagram'\n                        >\n                            <FaIcons.FaInstagram />\n                        </Link>\n                        <Link className='social-icon-link youtube'\n                            to='/'\n                            target='_blank'\n                            aria-label='Youtube'\n                        >\n                            <FaIcons.FaYoutube />\n                        </Link>\n                        <Link className='social-icon-link twitter'\n                            to='/'\n                            target='_blank'\n                            aria-label='Twitter'\n                        >\n                            <FaIcons.FaTwitter />\n                        </Link>\n                        <Link className='social-icon-link linkedin'\n                            to='/'\n                            target='_blank'\n                            aria-label='LinkedIn'\n                        >\n                            <FaIcons.FaLinkedin />\n                        </Link>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport '../App.css';\nimport HeroSection from '../components/HeroSection';\nimport Cards from '../components/Cards';\nimport Footer from '../components/Footer';\n\n/* Home page of the portal */\n\nfunction Home () {\n    return (\n        <>\n            <HeroSection />\n            <Cards />\n            <Footer />\n        </>\n    )\n}\n\nexport default Home;","import React from 'react'\nimport '../App.css'\nimport { useTranslation } from \"react-i18next\";\nimport './styles/Services.css'\n\n/* Filler \"Services\" page, this is blank at the moment, no actual information or utility here. */\n\nfunction Services() {\n    const {t} = useTranslation(); //react-i18-next\n    return (\n        <div className=\"services-background\">\n             <h1 className='services'>{t('services')}</h1>;\n        </div>\n    )\n}\n\nexport default Services\n\n","import React from 'react';\nimport '../App.css';\nimport { useTranslation } from \"react-i18next\";\nimport './styles/Products.css';\n\n/* Filler \"Products\" page, this is blank at the moment, no actual information or utility here */\n\nfunction Products() {\n    const {t} = useTranslation(); //react-i18-next\n    return (\n        <div className=\"products-background\">\n            <img src='../../images/city4.jpg' className='background' alt='city' style= {{ opacity: 0.7 }} />\n            <h1 className='products'>{t('products')}</h1>\n        </div>\n        \n    );\n\n}\n\nexport default Products;","\nexport default function validateInfo(values) {\n\n    let errors = {}\n\n    if(!values.username.trim()) {\n        errors.username = \"Username required\"\n    }\n\n    if(!values.email) {\n        errors.email = \"Email required\"\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n        errors.email = 'Email address is invalid';\n    }\n\n    if(!values.password) {\n        errors.password = 'Password is required'\n    } else if(values.password.length < 8) {\n        errors.password = 'Password must be 8 characters or more'\n    }\n\n    if(!values.password2) {\n        errors.password2 = 'Password is required'\n    } else if(values.password !== values.password2) {\n        errors.password2 = 'Passwords do not match'\n    }\n\n    return errors;\n}","import Cookies from 'js-cookie'\n/* A class to use the Clientix API endpoints */\n\nexport default class ClientixAPI {\n\n    //Defining default fields for REST API call:\n    constructor() {\n        this.sessionToken = Cookies.get(\"session_token\"); // Session token obtained at log in.\n        this.language = Cookies.get(\"i18next\"); // Language token from cookies.\n        this.headers = new Headers(); // Headers for the call.\n        this.headers.append(\"Cookie\", \"PHPSESSID=\" + this.sessionToken);\n        this.requestOptions = {\n            mode: 'cors', // cors-policy adherent\n            headers: this.headers,\n            redirect: 'follow'\n        }\n        this.method = {\n            get: 'GET',\n            post: 'POST',\n            delete: 'DELETE'\n        }\n    }\n\n    /**\n     * Function: Uses Clientix clxLogin Endpoint to log a user into the system. Function is asynchrnous\n     * @param username The username to be logged into the system.\n     * @param password The password to be logged into the system.\n     * @returns: None. Automatically sets a session token to the User's cookies \n     */\n    async login(username, password, showLoader) {\n        showLoader()\n        this.requestOptions.method = this.method.post; // append method of call to request options\n        await fetch(\"https://eportal.clientix.com/clx56dev/apirest.php?username=\" + (username) + \"&password=\" + (password) + \"&language=\" + (this.language) + \"&classname=clxLogin\", this.requestOptions)\n            .then(response => response.text())\n            .then(result => {\n                let token = JSON.parse(result);\n                this.session_token = token.Token;\n                Cookies.set(\"session_token\", this.session_token)\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    /**\n     * Function: Uses Clientix GetSessionData Endpoint to retrieve information about account usage. Function is asynchronous. Timeout of 1.5s.\n     * @param: None, automatically retrieves a session token from the user's cookies.\n     * @returns: Sets account information to the respective elements in the HTML with the appropriate ID's.\n     */\n    async getAccountInfo() {\n        this.sessionToken = Cookies.get(\"session_token\")\n        this.requestOptions.method = this.method.get; // append method of call to request options\n        await fetch(\"https://eportal.clientix.com/clx56dev/apirest.php?classname=clxGetSessionData&CLX_SESSION_ID=\" + this.sessionToken, this.requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                let account = JSON.stringify(result);\n                let accountInfo = JSON.parse(account);\n                sessionStorage.setItem('FIRSTNAME', accountInfo.session_data.FIRSTNAME);\n                sessionStorage.setItem('LASTNAME', accountInfo.session_data.LASTNAME);\n                sessionStorage.setItem('EMAIL', accountInfo.session_data.EMAIL);\n                sessionStorage.setItem('PHONE', accountInfo.session_data.PHONE);\n            })\n            .catch(error => console.log('error', error))\n    }\n\n    /**\n     * Function: Uses Clientix MY_FICO Endpoint to retrieve the user's trust information. Function is asynchronous. Timeout of 1.5s.\n     * @param: None, automatically retrieves a session token from the user's cookies.\n     * @returns: Sets trusts to the user's local storage to be retrieved and processed.\n     */\n    async getUserTrusts() {\n        this.sessionToken = Cookies.get(\"session_token\");\n        this.language = Cookies.get(\"i18-next\")\n        this.requestOptions.method = this.method.get; // append method of call to request options\n        await fetch(\"https://eportal.clientix.com/clx56dev/apirest.php?classname=MY_FICO&CLX_SESSION_ID=\" + this.sessionToken + \"&language=\" + this.language, this.requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                let myTrustsJson = JSON.stringify(result)\n                if (myTrustsJson != null) {\n                    sessionStorage.setItem('myTrusts', myTrustsJson);\n                }\n            })\n            .catch(error => console.log('error', error))\n    }\n\n    /**\n     * Function: Uses Clientix MY_FICO Endpoint to retrieve the user's trust information. Function is asynchronous. Timeout of 1.5s.\n     * @param: None, automatically retrieves a session token from the user's cookies.\n     * @returns: Sets trusts to the user's local storage to be retrieved and processed.\n     */\n     async getUserTransactions(hideLoader) {\n        this.sessionToken = Cookies.get(\"session_token\");\n        this.requestOptions.method = this.method.get; // append method of call to request options\n        await fetch(\"https://eportal.clientix.com/clx56dev/apirest.php?classname=MY_TRANSACT&CLX_SESSION_ID=\" + this.sessionToken, this.requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                let myTransactionsJson = JSON.stringify(result)\n                if (myTransactionsJson != null) {\n                    sessionStorage.setItem('myTransactions', myTransactionsJson);\n                    hideLoader()\n                }\n            })\n            .catch(error => console.log('error', error))\n    }\n\n\n\n    /**\n     * Function: Uses Clientix ServRequestLoad to get the options for a service request. Function is asynchronous. Timeout of 1.5 seconds.\n     * No Parameters.\n     * @returns Sets service request options to the user's local storage to be retrieved and processed.\n     */\n    async submitServiceRequest(subject, info, serviceOptions) {\n        this.sessionToken = Cookies.get(\"session_token\");\n        setTimeout(async () => {\n\n            console.log(\"Sending...\")\n\n            let key = serviceOptions.filter(option => {\n                return option.key ? subject === option.value : 0\n            })\n\n            console.log(\"Subject: \" + subject)\n\n            this.requestOptions.method = this.method.get;\n\n             console.log(\"KEY: \" + key[0].key)\n\n            let urlPrep = \"https://eportal.clientix.com/clx56dev/apirest.php?classname=ServRequestLoad&CLX_SESSION_ID=\" + this.sessionToken;\n            urlPrep += \"&FIRSTNAME=\" + sessionStorage.getItem('FIRSTNAME');\n            urlPrep += \"&LASTNAME=\" + sessionStorage.getItem('LASTNAME');\n            urlPrep += \"&EMAIL=\" + sessionStorage.getItem('EMAIL');\n            urlPrep += \"&PHONE=\" + sessionStorage.getItem('PHONE');\n            urlPrep += \"&REQ_TYPE=\" + key[0].key;\n            urlPrep += \"&SUBJECT=\" + subject;\n            urlPrep += \"&ADD_INFO=\" + info;\n            urlPrep += \"&EXT_REF_NO=API001\";\n            urlPrep += \"&DEPARTMENT_CODE=000001\";\n            urlPrep += \"&REQ_SOURCE=0010\";\n            urlPrep += \"&ASSIGNEDTO_USER=salegrett\";\n\n            console.log(\"URL\" + urlPrep)\n\n\n            await fetch(urlPrep, this.requestOptions)\n                .then(response => response.json())\n                .then(result => {\n                    let servRequestOptions = JSON.stringify(result)\n                    if (servRequestOptions != null) {\n                        sessionStorage.setItem('serviceRequestStatus', servRequestOptions);\n                    }\n                })\n                .catch(error => console.log('error', error));\n        }, 0);\n    }\n\n\n    async getUserData(username, password, showLoader, hideLoader) {\n        await this.login(username, password, showLoader)\n        await this.getAccountInfo()\n        await this.getUserTrusts()\n        return await this.getUserTransactions(hideLoader)\n    }\n}","import Cookies from 'js-cookie';\nimport { useState, useEffect } from 'react';\nimport ClientixApi from './ClientixAPI'\n\n\n/**\n * A Function to use the login and singup forms, validate information, and define a successful log into the system.\n * @param {*} callback the function takes a callback to a submit function, to submit the login / signup form\n * @param {*} validate the validation parameters to be used for the information.\n * @returns { handleChange, handleSubmit, values, errors } handleCHange is responsible for handling the user's input, \n *                                                         handleSubmit will handle what happens on form submission,\n *                                                         values will be the respective username password email etc...\n *                                                         errors defined for using the form, no empty values, and password validation etc...\n */\nconst useForm = (showLoader, hideLoader, callback1, validate) => {\n    const [values, setValues] = useState({\n        username: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setErrors(validate(values));\n        setIsSubmitting(true)\n    };\n\n    useEffect(\n        () => {\n            let api = new ClientixApi()\n            if ((Object.keys(errors).length === 0 ) && (isSubmitting === true)) {\n                Cookies.remove('session_token')\n                sessionStorage.clear()\n                localStorage.clear()\n                callback1(api, values.username, values.password, showLoader, hideLoader)\n            }\n        },\n        // eslint-disable-next-line \n        [errors]\n    );\n\n    return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;","import React from 'react';\nimport validate from '../functions/validateinfoSignUp'\nimport useForm from '../functions/useForm';\nimport './styles/Form.css';\nimport { useTranslation } from \"react-i18next\";\n\n/* Sign up page, takes a form submition handler as an argument for easy management of behavior */\nconst SignUp = ({ submitForm }) => {\n  const { t } = useTranslation();\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    submitForm,\n    validate\n  );\n\n  return (\n    <form onSubmit={handleSubmit} className='form' noValidate>\n      <h1>\n        {t('signup_form_header')}\n      </h1>\n      <div className='form-inputs'>\n        <label className='form-label'>{t('username')}</label>\n        <input\n          className='form-input'\n          type='text'\n          name='username'\n          placeholder={t('username_placeholder')}\n          value={values.username}\n          onChange={handleChange}\n        />\n        {errors.username && <p>{errors.username}</p>}\n      </div>\n      <div className='form-inputs'>\n        <label className='form-label'>{t('email')}</label>\n        <input\n          className='form-input'\n          type='email'\n          name='email'\n          placeholder={t('email_placeholder')}\n          value={values.email}\n          onChange={handleChange}\n        />\n        {errors.email && <p>{errors.email}</p>}\n      </div>\n      <div className='form-inputs'>\n        <label className='form-label'>{t('password')}</label>\n        <input\n          className='form-input'\n          type='password'\n          name='password'\n          placeholder={t('password_placeholder')}\n          value={values.password}\n          onChange={handleChange}\n        />\n        {errors.password && <p>{errors.password}</p>}\n      </div>\n      <div className='form-inputs'>\n        <label className='form-label'>{t('confirm_password')}</label>\n        <input\n          className='form-input'\n          type='password'\n          name='password2'\n          placeholder={t('confirm_password_placeholder')}\n          value={values.password2}\n          onChange={handleChange}\n        />\n        {errors.password2 && <p>{errors.password2}</p>}\n      </div>\n      <button className='form-input-btn' type='submit'>\n        {t('sign_up')}\n      </button>\n      <span className='form-input-login'>\n        {t('already_have_acc')} <a href='./login'>{t('here')}</a>\n      </span>\n    </form>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\nimport './styles/Form.css';\nimport { useTranslation } from 'react-i18next'\n\n/* Defines Sign Up Success behavior */\nconst FormSuccess = () => {\n  const {t} = useTranslation();\n  return (\n    <div className='form-content-right'>\n      <h1 className='form-success'>{t('signup_success')}</h1>\n      <img className='form-img-2' src='images/img-2.png' alt='success' />\n    </div>\n  );\n};\n\nexport default FormSuccess;","\nimport React, { useState } from 'react';\nimport './styles/Form.css';\nimport FormSignup from './SignUp';\nimport FormSuccess from './FormSuccess';\n\n\n/**\n * The form used by {@link FormSignup} for sing up into the system\n * @returns the actual form in {@link FormSignup}\n */\nconst SignUpForm = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  return (\n    <>\n      <div className='form-container'>\n        {!isSubmitted ? (\n          <FormSignup submitForm={submitForm} />\n        ) : (\n          <FormSuccess />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SignUpForm;","import React from \"react\"\nimport '../App.css';\nimport Form from \"../components/SignUpForm\";\nimport './styles/SignUp.css'\n\n/* Sign up page for new users */\n\nfunction SignUp () {\n    return (\n        <div className='sign-up-bakcground'>\n            <Form />\n        </div>\n    )\n}\n\nexport default SignUp;","export default function validateInfoLogin(values) {\n\n    let errors = {}\n\n    if (!values.username.trim()) {\n        errors.username = \"Username required\"\n    }\n\n    if (!values.password) {\n        errors.password = 'Password is required'\n    } else if (values.password.length < 5) {\n        errors.password = 'Password must be 8 characters or more'\n    }\n\n    return errors;\n}","import React from 'react'\nimport './styles/FullPageLoader.css'\n\nconst FullPageLoader = () => {\n    return (\n        <div className='load-container'>\n            <img src='images/loader.gif' className='loader' alt='loading' />\n        </div>\n    )\n}\n\nexport default FullPageLoader\n","import React, { useState } from 'react'\nimport FullPageLoader from '../components/FullPageLoader'\n\nconst useFullPageLoader = () => {\n    const [loading, setLoading] = useState(false)\n    return [ \n        loading ? <FullPageLoader /> : null,\n        () => setLoading(true),\n        () => setLoading(false)\n    ]\n}\n\nexport default useFullPageLoader","import React from 'react';\nimport validate from '../functions/validateInfoLogin'\nimport useForm from '../functions/useForm';\nimport { useTranslation } from \"react-i18next\";\nimport useFullPageLoader from '../functions/useFullPageLoader';\nimport './styles/FormLogin.css'\n\n/* A Login component that will return a form */\n\nconst Login = ({ submitForm }) => {\n\n  const [loader, showLoader, hideLoader] = useFullPageLoader();\n  const { t } = useTranslation();\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    showLoader,\n    hideLoader,\n    submitForm,\n    validate\n  );\n\n\n  return (\n    <>\n      <div className='form-content-2'>\n        <form onSubmit={handleSubmit} className='form-2' noValidate>\n          <h1>\n            {t('login_prompt')}\n          </h1>\n          <div className='form-inputs-2'>\n            <label className='form-label-2'>{t('username')}</label>\n            <input\n              className='form-input-2'\n              type='text'\n              name='username'\n              placeholder={t('username_placeholder')}\n              value={values.username}\n              onChange={handleChange}\n            />\n            {errors.username && <p>{errors.username}</p>}\n          </div>\n          <div className='form-inputs-2'>\n            <label className='form-label-2'>{t('password')}</label>\n            <input\n              className='form-input-2'\n              type='password'\n              name='password'\n              placeholder={t('password_placeholder')}\n              value={values.password}\n              onChange={handleChange}\n            />\n            {errors.password && <p>{errors.password}</p>}\n          </div>\n          <button className='form-input-btn-2' type='submit'>\n            {t('login')}\n          </button>\n        </form>\n      </div>\n      {loader}\n    </>\n  );\n};\n\nexport default Login;\n","\nimport React, { useState } from 'react';\nimport Login from './Login';\nimport { Redirect } from 'react-router-dom';\nimport './styles/FormLogin.css'\n\n/**\n * LogIn Form, calls Login the actual form component and also defines states isSubmitted and setIsSubmitted to handle form submission\n * @returns the log in form to be displayed with submission handling.\n */\nfunction LoginForm() {\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  function submitForm(api, username, password, showLoader, hideLoader) {\n    api.getUserData(username, password, showLoader, hideLoader).then(() => {\n      console.log(\"Setting...\")\n      setIsSubmitted(true)} )\n  }\n\n  return (\n    <>\n      <div className='form-container-2'>\n        {!isSubmitted ? (\n          <Login submitForm={submitForm} />\n        ) : (\n          <Redirect to='/account' />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;","import React from 'react';\nimport '../App.css';\nimport Form2 from \"../components/LoginForm\"\n\n/* Login Page for current users */\n\nfunction Login()  {\n    return (\n        <div className=\"login-background\">\n            <Form2 />\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react';\nimport CardItem from './CardItem';\nimport './styles/Cards2.css';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Custom {@link CardItem} Component showing an image, text, a label.\n * @returns formatted {@link CardItem} Components\n */\nfunction Cards2() {\n    const {t} =useTranslation(); //react-i18-next\n\n    return (\n        <div className='cards2'>\n            <div className=\"cards__container\">\n                <div className=\"cards__wrapper\">\n                    <ul className=\"cards__items\">\n                        <CardItem \n                            src='images/my-trusts.jpg'\n                            text={t('my-trusts')}\n                            label={t('trust_prompt')}\n                            path='/my-trusts'\n                        />\n                        <CardItem \n                            src='images/my-transactions.jpg'\n                            text={t('my-transactions')}\n                            label={t('transactions_prompt')}\n                            path='/my-transactions'\n                        />\n                    </ul>\n                    <ul className=\"cards__items\">\n                        <CardItem \n                            src='images/credit.jpg'\n                            text={t('my_accs')}\n                            label={t('acc_prompt')}\n                            path='/my-accounts'\n                        />\n                        <CardItem \n                            src='images/settings.jpg'\n                            text={t('settings')}\n                            label={t('settings_prompt')}\n                            path='/settings'\n                        />\n                        <CardItem \n                            src='images/customerService.jpg'\n                            text={t('service_requests')}\n                            label={t('request_prompt')}\n                            path='/service-request'\n                        />\n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards2\n","import { React, useState } from 'react'\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\"\nimport { Link } from 'react-router-dom';\nimport i18next from 'i18next'\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport './styles/Sidebar.css';\nimport { withRouter } from 'react-router';\n\nconst languages = [\n    {\n        code: 'en',\n        name: 'English',\n        country_code: 'gb'\n    },\n    {\n        code: 'es',\n        name: 'Español',\n        country_code: 'es'\n    }\n]\n\nconst SideBarData = [\n    {\n        title : 'banking_profile',\n        id: 'bank-profile',\n        icon: <AiIcons.AiFillBank className='icon'/>,\n        cName: 'side-text',\n        link: '/account'\n    },\n    {\n        title : 'settings',\n        id: 'settings',\n        icon: <IoIcons.IoMdSettings className='icon'/>,\n        cName: 'side-text',\n        link: '/settings'\n    },\n    {\n        title : 'accounts',\n        id: 'accounts',\n        icon: <AiIcons.AiFillCreditCard className='icon'/>,\n        cName: 'side-text',\n        link: '/accounts',\n    },\n    {\n        title : 'faq',\n        id: 'faq',\n        icon: <AiIcons.AiFillInfoCircle className='icon'/>,\n        cName: 'side-text',\n        link: '/faq'\n    }\n]\n\nconst GlobeIcon = ({ width = 24, height = 24 }) => (<svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} fill=\"currentColor\" className=\"bi bi-globe\" viewBox=\"0 0 16 16\">\n    <path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z\" />\n</svg>)\n\nfunction Sidebar() {\n    const currentLanguageCode = Cookies.get('i18next') || 'en'; //the current language selected\n    const { t } = useTranslation();\n    const [sidebar, setSidebar] = useState(true);\n    const toggle = () => setSidebar(!sidebar);\n\n    return (\n        <>\n                <div className=\"sidebar\">\n                    <Link to=\"#\" className='menu-bars'>\n                        <FaIcons.FaBars onClick={toggle} />\n                    </Link>\n                    <Dropdown className=\"dropdown-side\">\n                                <Dropdown.Toggle className=\"dropdown-side-toggle\" variant=\"success\" id=\"dropdown-side-basic\">\n                                    <GlobeIcon className=\"globe\" /><FaIcons.FaChevronDown />\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"dropdown-side-menu\">\n                                    <li><span className=\"dropdown-side-item-text\">{t('language')}</span></li>\n                                    {languages.map(({ code, name, country_code }) => (\n                                        <li key={country_code} className=\"dropdown-side-list-item\">\n                                            <Dropdown.Item className=\"dropdown-side-item\"\n                                                onClick={() => i18next.changeLanguage(code)}\n                                                disabled={code === currentLanguageCode}>\n                                                <span className={`flag-icon flag-icon-${country_code} mx-2`} style={{ opacity: code === currentLanguageCode ? 0.3 : 1 }}></span> {/* Deactivate button when the current language is active */}\n                                                {name}\n                                            </Dropdown.Item>\n                                        </li>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                </div>\n                <nav className={sidebar ? 'side-menu active' : 'side-menu'}>\n                    <ul className='side-menu-items'>\n                        <li className='sidebar-toggle' onClick={toggle}>\n                            <Link to='#' className='menu-bars'>\n                                <AiIcons.AiOutlineCloseSquare />\n                            </Link>\n                        </li>\n                        {SideBarData.map((item, index) => {\n                            return (\n                                <li key={index} className={item.cName}>\n                                    <a href={item.link} >\n                                        {item.icon}\n                                        <span>{t(item.title)}</span>\n                                    </a>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </nav>\n        </>\n    )\n}\n\nexport default withRouter(Sidebar)","import React from 'react';\nimport './styles/Account.css'\nimport Cards2 from '../components/Cards2'\nimport Sidebar from '../components/Sidebar'\nimport { useTranslation } from 'react-i18next';\n/* Account Page, displays basic account information and links to all other account pages*/\n\nfunction Account() {\n\n    const acc_hold = sessionStorage.getItem(\"FIRSTNAME\") + \" \" + sessionStorage.getItem(\"LASTNAME\")\n    const { t } = useTranslation();\n\n    return (\n        <>\n        <Sidebar />\n            <div className='account'>\n                { /* eslint-disable-next-line */}\n                <h1 id=\"account-holder\" className='acc_name'>{t('welcome') + ' ' + acc_hold}</h1>\n                <h3 className='prompt'>{t('what-help-with')}</h3>\n                <Cards2 className='card-acc-menu' />\n            </div>\n        </>\n    )\n}\n\nexport default Account\n","import Cookies from \"js-cookie\";\n\n/**\n * Class with helper functions to process @module ClientixAPI data\n */\nexport default class DataProcessingUtil {\n\n    /**\n     * Function to process the trust information stored by the @module ClientixAPI [MY_FICO]{@link http://oxygen.alenet.com/clx56dev/apirest.php?classname=MY_FICO} endpoint in the user's local storage.\n     * @returns An HTML table with the extracted trust information from the user's local storage\n     */\n    populateTable() {\n\n        //obtain trust infromation from user's local storage and process to json. propArray contains all trustProperties.\n        let myTrusts = sessionStorage.getItem('myTrusts');\n        let trustsObj = JSON.parse(myTrusts);\n        let trustsProperties = trustsObj.map(trust => {\n            return trust.objects.map(elem => {\n                return elem.objects.map(obj => {\n                    return obj;\n                });\n            })\n        });\n        let propArray = trustsProperties[0];\n\n        /*ARRAY SETUP: elem[0] : ID, elem[1] : FICO No., elem[2] : Contract No., elem[3] : irrelevant\n                       elem[4] : Contract Name, elem[5] : Contract Start date, elem[6]: irrelevant, elem[7] : Trust type */\n        let trustInfo = propArray.map((elem, index) => {\n            let date = new Date(elem[5].contents); //Pretty format the date for usability.\n            let year = new Intl.DateTimeFormat(Cookies.get('i18next'), { year: 'numeric' }).format(date);\n            let month = new Intl.DateTimeFormat(Cookies.get('i18next'), { month: 'short' }).format(date);\n            let day = new Intl.DateTimeFormat(Cookies.get('i18next'), { year: '2-digit' }).format(date);\n            let dateString = `${year}-${month}-${day}`;\n            return (\n                <tr key={index}>\n                    <td className='fico-contract-num' key=\"{elem[2]}\">{this.removeUglyChars(elem[2].contents)}</td>\n                    <td className='fico-contract-name' key=\"{elem[4]}\">{this.removeUglyChars(this.toTitleCase(elem[4].contents))}</td>\n                    <td className='fico-contract-date' key=\"{elem[5]}\">{dateString}</td>\n                    <td className='fico-type' key=\"{elem[7]}\">{elem[7].contents}</td>\n                </tr>\n            )\n        })\n        return trustInfo;\n    }\n\n    /**\n     * Function to process the trust information stored by the @module ClientixAPI [MY_TRANSACT]{@link http://oxygen.alenet.com/clx56dev/apirest.php?classname=MY_TRANSACT} endpoint in the user's local storage.\n     * @returns An HTML table with the extracted trust information from the user's local storage\n     */\n    populateTransactions() {\n        //obtain transaction infromation from user's local storage and process to json. propArray contains all trustProperties.\n        let myTransactions = sessionStorage.getItem('myTransactions');\n        let transactionObj = JSON.parse(myTransactions);\n        let transactionProperties = transactionObj.map(transaction => {\n            return transaction.objects.map(elem => {\n                return elem.objects.map(obj => {\n                    return obj;\n                });\n            })\n        });\n\n        let propArray = transactionProperties[0];\n    \n        /*ARRAY SETUP: 0=ID, 1=IDCODE , 3=EFFTDATE  5=REVERSAL_PEND 6=TRANSTBL_CODE\n                        7=CURRENCY_CODE 8=TRANS_AMT 9=TAXABLE_AMT 10=TAX_AMT 11=TOTAL_AMT 12=EXCHANGE_RT 13=BASE_TRANS_AMT\n                        14=CONTRACT_NAME 15=DISBURSEMENT_TYPE 16=VOID 17=CHECK_NO 18=CHECK_PRINT_DATI 19=CHECK_PRINT_BY */\n        let transInfo = propArray.map((elem, index) => {\n            let status = elem[4].contents\n            let ammount = elem[8].contents\n            let name = this.toTitleCase(elem[2].contents)\n            let contract = this.toTitleCase(elem[14].contents)\n            return (\n                <tr key={index}>\n                    <td className='trans-status' key=\"{elem[4]}\">{status}</td>\n                    <td className='trans-ammount' key=\"{elem[8]}\">{ammount}</td>\n                    <td className='trans-name' key=\"{elem[2]}\">{name}</td>\n                    <td className='trans-contract' key=\"{elem[14]}\">{contract}</td>\n                </tr>\n            )\n        })\n        return transInfo;\n    }\n\n    /**\n     * Function to turn a string into \"Title Casing\"\n     * @param {*} str the string to be processed\n     * @returns the \"Title Cased\" string\n     */\n    toTitleCase(str) {\n        return str.replace(\n            /\\w\\S*/g,\n            function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }\n        );\n    }\n\n    /**\n     * Removes ugly chars\n     */\n    removeUglyChars(str) {\n        return str.replace(\n            /_/g,\n            \" \"\n        )\n    }\n}","import React from 'react'\nimport './styles/MyTrusts.css'\nimport { useTranslation } from 'react-i18next';\nimport DataProcessingUtil from '../functions/DataProcessingUtil';\nimport Sidebar from '../components/Sidebar'\n\n/* A page with all trust banking information for a user */\n\nfunction MyTrusts() {\n\n    //Populate HTML table with Trust information\n    const dataProcessor = new DataProcessingUtil();\n    const myTrusts = dataProcessor.populateTable();\n\n    const { t } = useTranslation(); //react-i18-next\n\n    return (\n        <div className='background'>\n            <Sidebar />\n            <div className='mytrusts'>\n                <div className='my-trusts-container'>\n                    <h1 className='my-trusts-title'>{t('my-trusts')}</h1>\n                    <table className='my-trusts-table'>\n                        <thead>\n                            <tr className='headers'>\n                                <th className='table-header'>{t('contract-no')}</th>\n                                <th className='table-header'>{t('contract-name')}</th>\n                                <th className='table-header'>{t('contract-date')}</th>\n                                <th className='table-header'>{t('fico-type')}</th>\n                            </tr>\n                        </thead>\n                        <tbody id='trusts'>{myTrusts}</tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyTrusts\n","import React from 'react'\nimport './styles/MyTransactions.css'\nimport { useTranslation } from 'react-i18next';\nimport DataProcessingUtil from '../functions/DataProcessingUtil';\nimport Sidebar from '../components/Sidebar'\n\n/* A page with all trust banking information for a user */\n\nfunction MyTransactions() {\n\n    //Populate HTML table with Trust information\n    const dataProcessor = new DataProcessingUtil();\n    const mytransactions = dataProcessor.populateTransactions();\n\n    const { t } = useTranslation(); //react-i18-next\n\n    return (\n        <div className='background'>\n            <Sidebar />\n            <div className='mytransactions'>\n                <div className='my-transactions-container'>\n                    <h1 className='my-transactions-title'>{t('my-transactions')}</h1>\n                    <table className='my-transactions-table'>\n                        <thead>\n                            <tr className='headers'>\n                                <th className='table-header'>{t('transaction-status')}</th>\n                                <th className='table-header'>{t('transaction-amt')}</th>\n                                <th className='table-header'>{t('transaction-comments')}</th>\n                                <th className='table-header'>{t('transaction-contract')}</th>\n                            </tr>\n                        </thead>\n                        <tbody id='transactions'>{mytransactions}</tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyTransactions\n","import React from \"react\";\nimport './styles/Dropdown.css'\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"Select\" };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value }, () => {\n      if(this.props.onChange) {\n        this.props.onChange(this.state)\n      }\n    });\n  };\n\n  render() {\n      const setOptions = this.props.options.map(option => {\n          return (\n              <option key={option.key} value={option.value}>{option.value}</option>\n          )\n      })\n\n      \n    return (\n        <label>\n          <select value={this.state.value} onChange={this.handleChange} className='select'>\n            {setOptions}\n          </select>\n        </label>\n    );\n  }\n}\nexport default Dropdown","import React from \"react\";\n\nclass TextArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value }, () => {\n      if(this.props.onChange) {\n        this.props.onChange(this.state)\n      }\n    });\n  };\n\n  render() {      \n    return (\n        <label>\n          <textarea className='text-area' value={this.state.value} rows='10' cols='125' onChange={this.handleChange}> </textarea>\n        </label>\n    );\n  }\n}\nexport default TextArea","import React from 'react'\nimport './styles/Popup.css'\n\nfunction Popup(props) {\n    return (props.trigger) ? (\n        <div className='popup'>\n            <div className='popup-inner'>\n                <button className='close-btn' onClick={() => props.setTrigger(false)}> Close </button>\n                {props.children}\n            </div>\n        </div>\n    ) : \"\";\n}\n\nexport default Popup\n","import { React, useState } from 'react'\nimport './styles/ServiceRequests.css'\nimport { useTranslation } from 'react-i18next';\nimport ClientixAPI from '../functions/ClientixAPI';\nimport Dropdown from '../components/Dropdown'\nimport TextArea from '../components/TextArea'\nimport Sidebar from '../components/Sidebar'\nimport Popup from '../components/Popup'\n\nfunction ServiceRequests() {\n\n    const { t } = useTranslation(); //react-i18-next\n\n    const [serviceOption, setServiceOption] = useState(t('serv101'))\n    const [info, setInfo] = useState('')\n\n    const textHandler = information => setInfo(information.value)\n    const dropdownHandler = option => setServiceOption(option.value)\n\n\n    const api = new ClientixAPI()\n\n    const [buttonPopup, setButtonPopup] = useState(false);\n\n    const handleSubmit = () => {\n        api.submitServiceRequest(serviceOption, info, serviceRequestOptions)\n        setButtonPopup(true)\n    }\n\n    const serviceRequestOptions = [\n        { key: '101', value: t('serv101') },\n        { key: '104', value: t('serv104') },\n        { key: '105', value: t('serv105') },\n        { key: '106', value: t('serv106') },\n        { key: '112', value: t('serv112') },\n        { key: '113', value: t('serv113') },\n        { key: '301', value: t('serv301') },\n        { key: '305', value: t('serv305') },\n        { key: '403', value: t('serv403') },\n        { key: '405', value: t('serv405') }\n    ]\n\n    return (\n        <div className='background'>\n            <Sidebar />\n            <div className='service-requests'>\n                <div className='service-form-container'>\n                    <h1 className='form-title'>{t(\"customer-support\")}</h1>\n                    <p className='dropdown-prompt'>{t('what-help-with')}</p>\n                    <Dropdown id='service-dropdown' placeholder={t('what-help-with')} options={serviceRequestOptions} onChange={dropdownHandler} />\n                    <h2 className='text-prompt'>{t('problem-description')}</h2>\n                    <TextArea onChange={textHandler} />\n                    <h3 className='contact-prompt'>{t('contact_prompt')}\n                        <a className='phone_no' href='tel:+178649-2258'>+1 (786) 749-2258</a>\n                        {t('contact_prompt_2')}\n                        <a className='email' href='mailto: support@alenet.com'>support@alenet.com</a>\n                    </h3>\n                    <button className='service-btn-submit' onClick={handleSubmit}> {t('submit-req')} </button>\n                </div>\n            </div>\n            <Popup trigger={buttonPopup} setTrigger={setButtonPopup}>\n                <h3>{t('request_success') + serviceOption}</h3>\n                <br />\n                <p>\n                    {\"Descripcion: \" + info}\n                    <br />\n                    <br />\n                    {t('request_success_2')}\n                </p>\n            </Popup>\n        </div>\n    )\n}\n\nexport default ServiceRequests\n","  \nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport './App.css';\nimport Home from './pages/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Services from './pages/Services';\nimport Products from './pages/Products';\nimport SignUp from './pages/SignUp';\nimport Login from './pages/Login';\nimport Account from './pages/Account'\nimport MyTrusts from './pages/MyTrusts';\nimport MyTransactions from './pages/MyTransactions';\nimport ServiceRequests from './pages/ServiceRequests';\n\n/* Main App component where everything is routed */\n\nfunction App() {\n\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/services' component={Services} />\n          <Route path='/products' component={Products} />\n          <Route path='/sign-up' component={SignUp} />\n          <Route path='/login' component={Login} />\n          <Route path='/account' component={Account} />\n          <Route path='/my-trusts' component={MyTrusts} />\n          <Route path='/my-transactions' component={MyTransactions} />\n          <Route path='/service-request' component={ServiceRequests} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend'; \nimport 'flag-icon-css/css/flag-icon.min.css'\nimport App from './App';\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector)\n  .use(HttpApi)\n  .init({\n    supportedLngs: ['en', 'es'],\n    fallbackLng: \"en\",\n    detection: {\n        order: ['cookie', 'htmlTag', 'localStorage', 'subdomain'],\n        caches: ['cookie'],\n\n    },\n    backend: {\n        loadPath: '/assets/locales/{{lng}}/translation.json',\n    }\n\n  });\n\nconst loadingMarkup = (\n  <div className=\"py-4 text-center\">\n    <h2>Loading..</h2>\n  </div>\n)\n\nReactDOM.render(\n<Suspense fallback={loadingMarkup}>\n  <App />\n</Suspense>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}